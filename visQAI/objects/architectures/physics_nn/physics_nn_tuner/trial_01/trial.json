{"trial_id": "01", "hyperparameters": {"space": [{"class_name": "Choice", "config": {"name": "interaction_units", "default": 32, "conditions": [], "values": [16, 32, 64, 128], "ordered": true}}, {"class_name": "Choice", "config": {"name": "dense_units", "default": 128, "conditions": [], "values": [32, 64, 128, 256], "ordered": true}}, {"class_name": "Choice", "config": {"name": "bottleneck_units", "default": 32, "conditions": [], "values": [16, 32, 64], "ordered": true}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "min_value": 1e-05, "max_value": 0.01, "step": null, "sampling": "log"}}], "values": {"interaction_units": 128, "dense_units": 64, "bottleneck_units": 32, "learning_rate": 1.5872740971656706e-05}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 265, in _run_and_update_trial\n    tuner_utils.convert_to_metrics_dict(\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner_utils.py\", line 132, in convert_to_metrics_dict\n    [convert_to_metrics_dict(elem, objective) for elem in results]\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner_utils.py\", line 132, in <listcomp>\n    [convert_to_metrics_dict(elem, objective) for elem in results]\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner_utils.py\", line 145, in convert_to_metrics_dict\n    best_value, _ = _get_best_value_and_best_epoch_from_history(\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner_utils.py\", line 116, in _get_best_value_and_best_epoch_from_history\n    objective_value = objective.get_value(metrics)\n  File \"C:\\Users\\paulm\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\src\\engine\\objective.py\", line 59, in get_value\n    return logs[self.name]\nKeyError: 'val_mse'\n"}